2.
Let's assume that D(v) < d(v). Now, let x be the node next to v on a minimal path to v with length D(v), so that D(v)=D(x)+w(xv), where w(xv) is the weight of the edge from x to v. If x is in P, d(x) = D(x). Thus, when the edges around x were relaxed, if d(v)_0 was the value v before the relaxation, if d(v)_0 > D(x)+w(xv), d(v)_0 would be relaxed to d(v)=D(v). For it not to be relaxed, d(v)_0 would have to equal D(x)+w(xv), making again d(v)=D(v). Thus, for D(v) < d(v), we need x to not be in P. This means that somewhere along a minimum path to v, there must be a vertex p in P, and after it a vertex m not in P. The subpath to a node in a minimal path makes a minimal path to the node, so the subpath of the path to v that ends at m is a minimal path to m. Thus, the node p next to m in this minimal path to m is in P, so d(m)=D(m), as found previously. Since m is on a path to v, d(m) = D(m) <= D(v) < d(v), so d(m) < d(v). This makes v not a minimum measure node, contradicting our assumptions. Thus, we cannot have D(v) < d(v), so D(v) = d(v).

3b.
I used it when I asserted that D(m) <= D(v).

4.
Finding the minimum measure is theta(V). This is done V times, once for each vertex, making theta(V^2). Since every edge is relaxed only once, this is theta(E), for a total of theta(V^2+E), or theta(V^2).

5.
When we update the value of a node, we first need to find it, which can be done using a dictionary to its index. Then, if the new value is less than one of its children, we heaping down, and if it is greater than its parent, we heaping up, which both take theta(log(L)) time, where L is the length of the heap. Thus, updating the queue takes theta(log(V)) time, as there are at most V elements of the pqueue. This is done once for every edge relaxation, taking a total of theta(Elog(V)) time. Now, getting the minimum node takes theta(log(V)) time, and is done once for every vertex, making theta(Vlog(V)). Thus, the total time is theta(Elog(V)+Vlog(V)) = theta(Elog(V)) = theta(Elog(E)).

6.
The second one is better. In the worst case, E = theta(V^2), so theta(Elog(E)) = theta(V^2log(V)) > theta(V^2). However, this is not what usually happens, and since the log term is essentially constant in most cases, the theta time will be less than V^2.